@{
    ViewData["Title"] = "Patient Records";
}

@Html.Partial("~/Areas/AdminPanel/Views/Shared/_admin_header.cshtml")

<section class="animated-section">
    <div class="container">
        <!-- Section Header -->
        <div class="section-header">
            <h3 class="section-title">
                <i class="fas fa-user-injured me-2"></i>Patient Records
            </h3>
            <button class="btn btn-primary" onclick="window.location.href='@Url.Action("AddPatientDetail", "Home")'">
                <i class="fas fa-plus me-2"></i>ADD PATIENT
            </button>
        </div>

        <!-- Search Bar -->
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title mb-3">
                    <i class="fas fa-search me-2"></i>Search Patient Records
                </h5>
                <div class="row">
                    <div class="col-md-6 mb-3 mb-md-0">
                        <input type="text" id="patientSearch" class="form-control"
                               placeholder="Search by name, disease, or phone number...">
                    </div>
                    <div class="col-md-3 mb-3 mb-md-0">
                        <select id="genderFilter" class="form-select">
                            <option value="">All Genders</option>
                            <option value="male">Male</option>
                            <option value="female">Female</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <button type="button" id="searchButton" class="btn btn-primary w-100">
                            <i class="fas fa-search me-2"></i>Search
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Patient Cards Container -->
        <div id="patientsContainer" class="row">
            <!-- Dynamic patient records will be inserted here -->
        </div>

        <!-- Pagination -->
        <div class="pagination-container mt-4">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center" id="pagination">
                    <!-- Pagination will be dynamically added here -->
                </ul>
            </nav>
        </div>
    </div>
</section>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    header {
        position: sticky;
        top: 0;
        width: 100%;
        z-index: 1000;
        background-color: white;
    }

    .html {
        scroll-behavior: smooth;
    }

    .animated-section {
        opacity: 0;
        animation: fadeIn 1s ease-in-out forwards;
    }

    .img-responsive {
        height: 120px;
        width: auto;
        margin-right: 10px;
    }

    .nav {
        background-color: lightskyblue;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        padding: 10px;
    }
    
    #patientsContainer {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
    }

    .patient-container {
        background-color: #f1f8ff;
        border: 2px solid #007bff;
        border-radius: 10px;
        padding: 15px;
        width: 350px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    .name {
        font-size: 22px;
        font-weight: bold;
        color: #333;
        margin-bottom: 10px;
        text-align: center;
    }

    .description {
        padding: 10px;
    }

    .table3 {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 10px;
    }

    .table3 td {
        padding: 8px;
        border-bottom: 1px solid #ccc;
        text-align: left;
    }

    .buttongreen {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin: 5px;
        display: inline-block;
    }

    .buttongreen:hover {
        background-color: #218838;
    }

    .buttondanger {
        background-color: #dc3545;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin: 5px;
        display: inline-block;
    }

    .buttondanger:hover {
        background-color: #c82333;
    }

    .button-group {
        display: flex;
        justify-content: center;
        gap: 10px;
    }

    .search {
        display: flex;
        position: relative;
        justify-content: center;
    }

    .pagination-container {
        margin-top: 30px;
    }

    .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .page-link {
        color: #007bff;
    }

    .page-link:hover {
        color: #0056b3;
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script>
    let currentPage = 1;
    const itemsPerPage = 6; // Show 6 cards per page
    let allPatients = [];

    document.addEventListener("DOMContentLoaded", function () {
        const searchButton = document.getElementById("searchButton");
        const patientSearchInput = document.getElementById("patientSearch");
        const genderFilter = document.getElementById("genderFilter");

        // Search button click
        searchButton.addEventListener("click", function () {
            const keyword = patientSearchInput.value.trim();
            const gender = genderFilter.value;
            searchPatients(keyword, gender);
        });

        // Trigger search on "Enter" key
        patientSearchInput.addEventListener("keypress", function (e) {
            if (e.key === "Enter") {
                searchButton.click();
            }
        });
    });

    async function searchPatients(keyword, gender) {
        try {
            const queryParams = new URLSearchParams();
            if (keyword) queryParams.append("keyword", keyword);
            if (gender) queryParams.append("gender", gender);

            const response = await fetch(`http://localhost:5071/api/Patient/search?${queryParams.toString()}`);
            if (!response.ok) throw new Error("Failed to fetch patients.");

            const result = await response.json();
            allPatients = result.dataList || [];
            setupPagination();
            displayPage(currentPage);
        } catch (error) {
            console.error("Search Error:", error);
            alert("‚ùå Error fetching patients. Please try again.");
        }
    }

    function setupPagination() {
        const totalPages = Math.ceil(allPatients.length / itemsPerPage);
        const pagination = document.getElementById("pagination");
        pagination.innerHTML = "";

        // Previous button
        pagination.innerHTML += `
            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="changePage(${currentPage - 1})" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        `;

        // Page numbers
        for (let i = 1; i <= totalPages; i++) {
            pagination.innerHTML += `
                <li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
                </li>
            `;
        }

        // Next button
        pagination.innerHTML += `
            <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="changePage(${currentPage + 1})" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        `;
    }

    function changePage(page) {
        if (page < 1 || page > Math.ceil(allPatients.length / itemsPerPage)) return;
        currentPage = page;
        displayPage(currentPage);
        setupPagination();
    }

    function displayPage(page) {
        const startIndex = (page - 1) * itemsPerPage;
        const endIndex = startIndex + itemsPerPage;
        const pagePatients = allPatients.slice(startIndex, endIndex);
        renderPatients(pagePatients);
    }

    function renderPatients(patients) {
        const resultsContainer = document.getElementById("patientsContainer");
        if (!resultsContainer) return;

        resultsContainer.innerHTML = "";

        if (patients.length === 0) {
            resultsContainer.innerHTML = `<p class="text-muted text-center w-100">No patient records found.</p>`;
            return;
        }

        patients.forEach(patient => {
            const card = document.createElement("div");
            card.className = "patient-container";
            card.innerHTML = `
            <div class="name">${patient.name}</div>
            <div class="description">
                <table class="table3">
                    <tr>
                        <td><strong>Disease:</strong></td>
                        <td>${patient.diseases}</td>
                    </tr>
                    <tr>
                        <td><strong>Gender:</strong></td>
                        <td>${patient.gender}</td>
                    </tr>
                    <tr>
                        <td><strong>Phone:</strong></td>
                        <td>${patient.phone}</td>
                    </tr>
                </table>
                <div class="button-group">
                     <button class="buttongreen" onclick="editPatient(${patient.id})">VIEW/ UPDATE</button>
                        <button class="buttondanger" onclick="deletePatient(${patient.id})">DELETE</button>
                        <button class="btn btn-info" onclick='printPatientDetails(${JSON.stringify(patient)})'>PRINT</button>
                </div>
            </div>
        `;
            resultsContainer.appendChild(card);
        });
    }
</script>

<script src="~/js/patient.js"></script>
<br/>

@Html.Partial("~/Areas/AdminPanel/Views/Shared/_admin_footer.cshtml")